// Generated by https://quicktype.io
export interface Antwerp {
   html_attributions: unknown[];
   next_page_token: string;
   results: AntwerpResult[];
   status: string;
}

export interface AntwerpResult {
   business_status?: AntwerpBusinessStatus;
   geometry: AntwerpGeometry;
   icon: string;
   name: string;
   opening_hours?: AntwerpOpeningHours;
   photos: AntwerpPhoto[];
   place_id: string;
   rating?: number;
   reference: string;
   user_ratings_total?: number;
   vicinity: string;
   plus_code?: AntwerpPlusCode;
   scope?: string;
   types?: string[];
   price_level?: number;
}

export enum AntwerpBusinessStatus {
   Operational = "OPERATIONAL"
}

export interface AntwerpGeometry {
   location: AntwerpLocation;
   viewport: AntwerpViewport;
}

export interface AntwerpLocation {
   lat: number;
   lng: number;
}

export interface AntwerpViewport {
   northeast: AntwerpLocation;
   southwest: AntwerpLocation;
}

export interface AntwerpOpeningHours {
   open_now: boolean;
}

export interface AntwerpPhoto {
   height: number;
   html_attributions: string[];
   photo_reference: string;
   width: number;
}

export interface AntwerpPlusCode {
   compound_code: string;
   global_code: string;
}

// Generated by https://quicktype.io

export interface Toronto {
   html_attributions: unknown[];
   next_page_token: string;
   results: TorontoResult[];
   status: string;
}

export interface TorontoResult {
   business_status: TorontoBusinessStatus;
   geometry: TorontoGeometry;
   icon: string;
   name: string;
   opening_hours?: TorontoOpeningHours;
   photos: TorontoPhoto[];
   place_id: string;
   plus_code: TorontoPlusCode;
   rating: number;
   reference: string;
   scope: string;
   types: TorontoType[];
   user_ratings_total: number;
   vicinity: string;
   price_level?: number;
   permanently_closed?: boolean;
}

export enum TorontoBusinessStatus {
   ClosedTemporarily = "CLOSED_TEMPORARILY",
   Operational = "OPERATIONAL"
}

export interface TorontoGeometry {
   location: TorontoLocation;
   viewport: TorontoViewport;
}

export interface TorontoLocation {
   lat: number;
   lng: number;
}

export interface TorontoViewport {
   northeast: TorontoLocation;
   southwest: TorontoLocation;
}

export interface TorontoOpeningHours {
   open_now: boolean;
}

export interface TorontoPhoto {
   height: number;
   html_attributions: string[];
   photo_reference: string;
   width: number;
}

export interface TorontoPlusCode {
   compound_code: string;
   global_code: string;
}

export enum TorontoType {
   Bar = "bar",
   Establishment = "establishment",
   Food = "food",
   Lodging = "lodging",
   MealDelivery = "meal_delivery",
   MealTakeaway = "meal_takeaway",
   NightClub = "night_club",
   PointOfInterest = "point_of_interest",
   Restaurant = "restaurant"
}

// Generated by https://quicktype.io

export interface Chicago {
   html_attributions: unknown[];
   next_page_token: string;
   results: ChicagoResult[];
   status: string;
}

export interface ChicagoResult {
   business_status: ChicagoBusinessStatus;
   geometry: ChicagoGeometry;
   icon: string;
   name: string;
   opening_hours?: ChicagoOpeningHours;
   photos: ChicagoPhoto[];
   place_id: string;
   plus_code: ChicagoPlusCode;
   price_level?: number;
   rating: number;
   reference: string;
   scope: string;
   types: string[];
   user_ratings_total: number;
   vicinity: string;
   permanently_closed?: boolean;
}

export enum ChicagoBusinessStatus {
   ClosedTemporarily = "CLOSED_TEMPORARILY",
   Operational = "OPERATIONAL"
}

export interface ChicagoGeometry {
   location: ChicagoLocation;
   viewport: ChicagoViewport;
}

export interface ChicagoLocation {
   lat: number;
   lng: number;
}

export interface ChicagoViewport {
   northeast: ChicagoLocation;
   southwest: ChicagoLocation;
}

export interface ChicagoOpeningHours {
   open_now: boolean;
}

export interface ChicagoPhoto {
   height: number;
   html_attributions: string[];
   photo_reference: string;
   width: number;
}

export interface ChicagoPlusCode {
   compound_code: string;
   global_code: string;
}

// Generated by https://quicktype.io

export interface SanFrancisco {
   html_attributions: unknown[];
   next_page_token: string;
   results: SanFranciscoResult[];
   status: string;
}

export interface SanFranciscoResult {
   business_status: SanFranciscoBusinessStatus;
   geometry: SanFransciscoGeometry;
   ix?: string;
   name: string;
   opening_hours?: SanFranciscoOpeningHours;
   photos: SanFranciscoPhoto[];
   place_id: string;
   plus_code: SanFranciscoPlusCode;
   price_level: number;
   rating: number;
   reference: string;
   scope: string;
   types: string[];
   user_ratings_total: number;
   vicinity: string;
   icon?: string;
   permanently_closed?: boolean;
}

export enum SanFranciscoBusinessStatus {
   ClosedTemporarily = "CLOSED_TEMPORARILY",
   Operational = "OPERATIONAL"
}

export interface SanFransciscoGeometry {
   location: SanFranciscoLocation;
   viewport: SanFranciscoViewport;
}

export interface SanFranciscoLocation {
   lat: number;
   lng: number;
}

export interface SanFranciscoViewport {
   northeast: SanFranciscoLocation;
   southwest: SanFranciscoLocation;
}

export interface SanFranciscoOpeningHours {
   open_now: boolean;
}

export interface SanFranciscoPhoto {
   height: number;
   html_attributions: string[];
   photo_reference: string;
   width: number;
}

export interface SanFranciscoPlusCode {
   compound_code: string;
   global_code: string;
}

export type MockLocations =
   | "51.219448,4.402464"
   | "43.653225,-79.383186"
   | "41.878113,-87.629799"
   | "37.7749295,-122.4194155";

export type MockKeys = string & MockLocations;

export type Mock = {
   "51.219448,4.402464": Antwerp;
   "43.653225,-79.383186": Toronto;
   "41.878113,-87.629799": Chicago;
   "37.7749295,-122.4194155": SanFrancisco;
};

export type MockApiResult =
   | AntwerpResult
   | TorontoResult
   | ChicagoResult
   | SanFranciscoResult;

export type TransformedMockApiResult<T> = MockApiResult & T;
